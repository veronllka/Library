Create Database Library;

USE Library;

/* 2.1. Авторы */
CREATE TABLE Авторы
(
    АвторID       INT IDENTITY PRIMARY KEY,
    ФИО           NVARCHAR(100) NOT NULL,
    ГодРождения   SMALLINT
);

/* 2.2. Издательства */
CREATE TABLE Издательства
(
    ИздательствоID INT IDENTITY PRIMARY KEY,
    Название       NVARCHAR(100) NOT NULL,
    Город          NVARCHAR(100)
);

/* 2.3. Жанры */
CREATE TABLE Жанры
(
    ЖанрID   INT IDENTITY PRIMARY KEY,
    Название NVARCHAR(50) NOT NULL UNIQUE
);

/* ----------------------------------------------------------
   3. Основные сущности
---------------------------------------------------------- */

/* 3.1. Книги */
CREATE TABLE Книги
(
    КнигаID        INT IDENTITY PRIMARY KEY,
    Название       NVARCHAR(200) NOT NULL,
    ГодИздания     SMALLINT,
    ИздательствоID INT NOT NULL,
    ЖанрID         INT NOT NULL,
    /* Внешние ключи */
    FOREIGN KEY (ИздательствоID) REFERENCES Издательства (ИздательствоID),
    FOREIGN KEY (ЖанрID)         REFERENCES Жанры        (ЖанрID)
);

/* 3.2. Связь «Книга–Автор» (многие-ко-многим) */
CREATE TABLE Книги_Авторы
(
    КнигаID INT NOT NULL,
    АвторID INT NOT NULL,
    PRIMARY KEY (КнигаID, АвторID),
    FOREIGN KEY (КнигаID) REFERENCES Книги  (КнигаID),
    FOREIGN KEY (АвторID) REFERENCES Авторы (АвторID)
);

/* 3.3. Читатели */
CREATE TABLE Читатели
(
    ЧитательID   INT IDENTITY PRIMARY KEY,
    Фамилия      NVARCHAR(50)  NOT NULL,
    Имя          NVARCHAR(50)  NOT NULL,
    Отчество     NVARCHAR(50),
    ДатаРождения DATE,
    Телефон      NVARCHAR(20),
    Адрес        NVARCHAR(200)
);

/* 3.4. Выдачи */
CREATE TABLE Выдачи
(
    ВыдачаID                INT IDENTITY PRIMARY KEY,
    ЧитательID              INT NOT NULL,
    КнигаID                 INT NOT NULL,
    ДатаВыдачи              DATE NOT NULL,
    ДатаВозврата            DATE NOT NULL,
    ДатаФактическогоВозврата DATE,
    /* Внешние ключи */
    FOREIGN KEY (ЧитательID) REFERENCES Читатели (ЧитательID),
    FOREIGN KEY (КнигаID)    REFERENCES Книги    (КнигаID)
);

/* ----------------------------------------------------------
   4. Наполнение справочников и примеры данных
---------------------------------------------------------- */

/* 4.1. Авторы */
INSERT INTO Авторы (ФИО, ГодРождения) VALUES
 (N'Александр Сергеевич Пушкин', 1799),
 (N'Лев Николаевич Толстой',     1828),
 (N'Фёдор Михайлович Достоевский',1821);

/* 4.2. Издательства */
INSERT INTO Издательства (Название, Город) VALUES
 (N'Эксмо', N'Москва'),
 (N'АСТ',   N'Москва');

/* 4.3. Жанры */
INSERT INTO Жанры (Название) VALUES
 (N'Роман'),
 (N'Поэзия');

/* 4.4. Книги */
INSERT INTO Книги (Название, ГодИздания, ИздательствоID, ЖанрID) VALUES
 (N'Евгений Онегин',            1833, 1, 2),
 (N'Война и мир',               1869, 2, 1),
 (N'Преступление и наказание',  1866, 1, 1);

/* 4.5. Связь Книга-Автор */
INSERT INTO Книги_Авторы (КнигаID, АвторID) VALUES
 (1, 1), -- «Евгений Онегин» — А.С. Пушкин
 (2, 2), -- «Война и мир»   — Л.Н. Толстой
 (3, 3); -- «Преступление и наказание» — Ф.М. Достоевский

/* 4.6. Читатели */
INSERT INTO Читатели (Фамилия, Имя, Отчество, ДатаРождения, Телефон, Адрес) VALUES
 (N'Иванов',  N'Иван',  N'Иванович', '2000-05-12', N'+7 900 123-45-67', N'г. Оренбург, ул. Советская, д. 10'),
 (N'Петрова', N'Елена', N'Сергеевна', '1998-09-03', N'+7 960 222-33-44', N'г. Оренбург, ул. Чкалова, д. 5');

/* 4.7. Выдачи */
INSERT INTO Выдачи (ЧитательID, КнигаID, ДатаВыдачи, ДатаВозврата) VALUES
 (1, 1, '2025-06-10', '2025-06-24'),
 (2, 3, '2025-06-12', '2025-06-26');

 /* ----------------------------------------------------------
   5. Таблица ролей
---------------------------------------------------------- */
CREATE TABLE Роли
(
    РольID   INT IDENTITY PRIMARY KEY,
    Название NVARCHAR(50) NOT NULL UNIQUE
);

/* ----------------------------------------------------------
   6. Таблица пользователей
      (каждый пользователь имеет одну роль)
---------------------------------------------------------- */
CREATE TABLE Пользователи
(
    ПользовательID INT IDENTITY PRIMARY KEY,
    ФИО            NVARCHAR(100) NOT NULL,
    Логин          NVARCHAR(50)  NOT NULL UNIQUE,
    Пароль         NVARCHAR(256) NOT NULL,   -- для примера: хранится как обычная строка
    РольID         INT NOT NULL,
    CONSTRAINT FK_Пользователи_Роли
        FOREIGN KEY (РольID) REFERENCES Роли (РольID)
);

/* ----------------------------------------------------------
   7. Наполнение ролей и пользователей
---------------------------------------------------------- */

/* 7.1. Роли */
INSERT INTO Роли (Название) VALUES
 (N'Администратор'),
 (N'Библиотекарь'),
 (N'Читатель');

/* 7.2. Пользователи */
INSERT INTO Пользователи (ФИО, Логин, Пароль, РольID) VALUES
 (N'Сидоров Николай Петрович',  N'1',   N'1', 1), -- Администратор
 (N'Кузнецова Мария Ивановна',  N'2', N'2',  2), -- Библиотекарь
 (N'Погонин Сергей Андреевич',  N'3',   N'3',  3); -- Читатель
